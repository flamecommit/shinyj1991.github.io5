{"componentChunkName":"component---src-templates-post-jsx","path":"/Lodash-Array-Methods-5/","result":{"data":{"site":{"siteMetadata":{"title":"SIMPLIZM"}},"markdownRemark":{"id":"9bc21751-5b7b-562e-90d8-f6e5d18610d5","excerpt":"_.nth 배열의 인덱스 n에 있는 요소를 가져옵니다. n이 음수라면 끝에서 부터 n번째 요소를 가져옵니다. Arguments\n- array (Array): 대상 배열 Returns\n- n=0 (number): 반환할 요소의 인덱스 _.pull 배열에서 지정된 모든 값을 제거합니다. 참고 : 과 달리 이 메서드는 배열을 변경합니다. Arguments\n- …","html":"<h2>_.nth</h2>\n<p>배열의 인덱스 n에 있는 요소를 가져옵니다. n이 음수라면 끝에서 부터 n번째 요소를 가져옵니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열</p>\n<p><strong><em>Returns</em></strong><br>\n- [n=0] (number): 반환할 요소의 인덱스</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">nth</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => 'b'</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">nth</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => 'c';</span></code></pre></div>\n<h2>_.pull</h2>\n<p>배열에서 지정된 모든 값을 제거합니다.</p>\n<p>참고 : <code class=\"language-text\">_.without</code>과 달리 이 메서드는 배열을 변경합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [values] (...*): 제거할 값</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 반환 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">pull</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => ['b', 'b']</span></code></pre></div>\n<h2>_.pullAll</h2>\n<p>제거할 값에 배열을 수락한다는 점을 제외하고 <code class=\"language-text\">_.pull</code> 과 같습니다.</p>\n<p>참고 : <code class=\"language-text\">_.difference</code> 와 달리 이 메서드는 배열을 변경합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- values (Array): 제거할 값</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 반환 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">pullAll</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => ['b', 'b']</span></code></pre></div>\n<h2>_.pullAllBy</h2>\n<p>배열 및 값의 각 요소에 대해 호출되는 반복을 하용하여 비교 기준을 생성한다는 점을 제외하면 <code class=\"language-text\">_.pullAll</code> 과 같습니다. 반복자는 하나의 인수(값)로 호출됩니다.</p>\n<p>참고 : <code class=\"language-text\">_.differenceBy</code> 와 달리 이 메서드는 배열을 변경합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- values (Array): 제거할 값<br>\n- [iteratee=_.identity] (Function): 반복마다 호출되는 비교 함수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 반환 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'x'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'x'</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'x'</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'x'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">pullAllBy</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'x'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'x'</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [{ 'x': 2 }]</span></code></pre></div>\n<h2>_.remove</h2>\n<p>술어를 사용하는 모든 요소를 배열에서 제거하고 제거된 요소의 배열을 반환합니다. 술어는(값, 인덱스, 배열)의 세 가지 인수로 호출됩니다.</p>\n<p>참고 : <code class=\"language-text\">_.filter</code> 와 달리 이 메서드는 배열을 변환합니다. <code class=\"language-text\">_.pull</code> 을 사용하여 값을 기준으로 배열에서 요소를 가져옵니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [iteratee=_.identity] (Function): 반복마다 호출되는 함수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 제거된 요소들의 새 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> evens <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1, 3]</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>evens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [2, 4]</span></code></pre></div>\n<h2>_.reverse</h2>\n<p>배열의 요소들을 반전시킵니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 결과 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [3, 2, 1]</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [3, 2, 1]</span></code></pre></div>","frontmatter":{"title":"Lodash Array Methods 5","date":"October 04, 2022","update":"October 04, 2022","tags":["Javascript","Lodash"],"series":"Lodash Array Methods"},"fields":{"slug":"/Lodash-Array-Methods-5/","readingTime":{"minutes":3.12}}},"seriesList":{"edges":[{"node":{"id":"c848be40-0a05-5f27-8b4c-c91003591577","fields":{"slug":"/Lodash-Array-Methods-1/"},"frontmatter":{"title":"Lodash Array Methods 1"}}},{"node":{"id":"b3971968-a2d2-5a55-bea4-b6f1bf522639","fields":{"slug":"/Lodash-Array-Methods-2/"},"frontmatter":{"title":"Lodash Array Methods 2"}}},{"node":{"id":"8808456b-568a-5b77-b231-8c686e0d5d9d","fields":{"slug":"/Lodash-Array-Methods-3/"},"frontmatter":{"title":"Lodash Array Methods 3"}}},{"node":{"id":"930faf90-b582-5245-9dbd-0b81bf86b296","fields":{"slug":"/Lodash-Array-Methods-4/"},"frontmatter":{"title":"Lodash Array Methods 4"}}},{"node":{"id":"9bc21751-5b7b-562e-90d8-f6e5d18610d5","fields":{"slug":"/Lodash-Array-Methods-5/"},"frontmatter":{"title":"Lodash Array Methods 5"}}}]},"previous":{"fields":{"slug":"/Lodash-Array-Methods-4/"},"frontmatter":{"title":"Lodash Array Methods 4"}},"next":null},"pageContext":{"id":"9bc21751-5b7b-562e-90d8-f6e5d18610d5","series":"Lodash Array Methods","previousPostId":"930faf90-b582-5245-9dbd-0b81bf86b296","nextPostId":null}},"staticQueryHashes":[]}