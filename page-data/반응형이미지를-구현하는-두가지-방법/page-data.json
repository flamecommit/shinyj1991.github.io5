{"componentChunkName":"component---src-templates-post-jsx","path":"/반응형이미지를-구현하는-두가지-방법/","result":{"data":{"site":{"siteMetadata":{"title":"SIMPLIZM"}},"markdownRemark":{"id":"763fddc1-0c06-5ea7-927a-8b62a29fbf69","excerpt":"반응형이미지란? 클라이언트 환경에 따라 최적화된 이미지 리소스를 불러와 렌더링하는 이미지 또는 기술을 말합니다.  나  같은 모던 프론트 프레임워크 환경에선 각 프레임워크가 제공하는 조건부 렌더링 문법을 사용하여 반응형 이미지를 구현할 수 있으며\n코어  만을 사용하여도 큰 어려움 없이 구현할 수 있습니다. 하지만 오늘은 javascript의 도움 없이 h…","html":"<h2>반응형이미지란?</h2>\n<p>클라이언트 환경에 따라 최적화된 이미지 리소스를 불러와 렌더링하는 이미지 또는 기술을 말합니다.</p>\n<p><code class=\"language-text\">React</code> 나 <code class=\"language-text\">Vue.js</code> 같은 모던 프론트 프레임워크 환경에선 각 프레임워크가 제공하는 조건부 렌더링 문법을 사용하여 반응형 이미지를 구현할 수 있으며\n코어 <code class=\"language-text\">javascript</code> 만을 사용하여도 큰 어려움 없이 구현할 수 있습니다.</p>\n<p>하지만 오늘은 javascript의 도움 없이 html과 CSS만으로 반응형 이미지를 구현하는 두가지 방법을 다뤄보겠습니다.</p>\n<h2>picture tag</h2>\n<p>첫번째 방법은 html의 <code class=\"language-text\">picture</code> 태그를 사용하는 것입니다.<br>\n<code class=\"language-text\">picture</code> 태그는 img 요소의 다중 이미지 리소스를 위한 컨테이너의 역할을 합니다.</p>\n<p><code class=\"language-text\">source</code> 태그를 사용하면 각 환경에 잘 어울리는 이미지를 불러올 수 있으며<br>\n<code class=\"language-text\">img</code> 태그는 기본 이미지를 불러옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picture</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(max-width: 768px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./mobile.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./desktop.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>device<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picture</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>CSS content</h2>\n<p>두번째 방법은 CSS의 <code class=\"language-text\">content</code> 속성을 사용하여 img 리소스를 스위칭 하는 것입니다.<br>\n<code class=\"language-text\">img</code> 태그에는 기본 이미지를 불러오고 CSS의 미디어쿼리로 환경에 따른 이미지 리소스를 스위칭 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./desktop.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>device<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span><span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>./mobile.jpg<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"반응형이미지를 구현하는 두가지 방법","date":"September 21, 2022","update":"September 21, 2022","tags":["CSS","html","반응형","이미지"],"series":null},"fields":{"slug":"/반응형이미지를-구현하는-두가지-방법/","readingTime":{"minutes":1.865}}},"seriesList":{"edges":[{"node":{"id":"9131aeb7-c62a-5620-93fe-e00d06ade60c","fields":{"slug":"/Nuxt-Datepicker-적용하기/"},"frontmatter":{"title":"[Nuxt.js] Datepicker UI 적용하기"}}},{"node":{"id":"3851619a-b962-5f61-a23d-27e50c952017","fields":{"slug":"/Javascript-어림수-구하기/"},"frontmatter":{"title":"Javascript 어림수 구하기"}}},{"node":{"id":"2646b1cf-88a6-5605-9138-2b4e4883cff6","fields":{"slug":"/Javascript-nullish-병합-연산자/"},"frontmatter":{"title":"Javascript nullish 병합 연산자"}}},{"node":{"id":"06f01f18-ab63-5b92-8274-2fbce3fbe3fb","fields":{"slug":"/Javascript-옵셔널-체이닝/"},"frontmatter":{"title":"Javascript 옵셔널 체이닝"}}},{"node":{"id":"ed73b7ae-89a9-5d56-ba71-b050a0c8811a","fields":{"slug":"/React에-CSS-적용하기/"},"frontmatter":{"title":"React에 CSS 적용하기"}}},{"node":{"id":"763fddc1-0c06-5ea7-927a-8b62a29fbf69","fields":{"slug":"/반응형이미지를-구현하는-두가지-방법/"},"frontmatter":{"title":"반응형이미지를 구현하는 두가지 방법"}}},{"node":{"id":"c3caa09a-7232-5805-bfab-a59feaea6c90","fields":{"slug":"/웹사이트-웹접근성-진단하기/"},"frontmatter":{"title":"웹사이트 웹접근성 진단하기"}}},{"node":{"id":"70263dfc-de5d-501e-aa41-1b4fb72b0378","fields":{"slug":"/Next-CSS-Transform/"},"frontmatter":{"title":"Next CSS Transform"}}},{"node":{"id":"8df1d397-9286-56ce-825c-c950b09cee49","fields":{"slug":"/vue3-프로젝트에-vue-i18n-적용하기/"},"frontmatter":{"title":"vue3 프로젝트에 vue-i18n 적용하기"}}},{"node":{"id":"ffb431e5-6dfd-581c-82a1-57b21591f8e6","fields":{"slug":"/vue3-본인확인서비스-붙이기/"},"frontmatter":{"title":"vue3 본인확인서비스 붙이기"}}},{"node":{"id":"9cb90d78-1088-5ccd-ae6d-16c138e97d8c","fields":{"slug":"/ios에서-mp4파일이-재생이-안될때/"},"frontmatter":{"title":"ios에서 mp4파일이 재생이 안될때"}}}]},"previous":{"fields":{"slug":"/React에-CSS-적용하기/"},"frontmatter":{"title":"React에 CSS 적용하기"}},"next":{"fields":{"slug":"/Lodash-Array-Methods-1/"},"frontmatter":{"title":"Lodash Array Methods 1"}}},"pageContext":{"id":"763fddc1-0c06-5ea7-927a-8b62a29fbf69","series":null,"previousPostId":"ed73b7ae-89a9-5d56-ba71-b050a0c8811a","nextPostId":"35bb198e-96b4-529d-b0c5-774d6e05733f"}},"staticQueryHashes":[]}