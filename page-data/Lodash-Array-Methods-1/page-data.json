{"componentChunkName":"component---src-templates-post-jsx","path":"/Lodash-Array-Methods-1/","result":{"data":{"site":{"siteMetadata":{"title":"SIMPLIZM"}},"markdownRemark":{"id":"c848be40-0a05-5f27-8b4c-c91003591577","excerpt":"_.chunk 매개변수 길이만큼 그룹으로 분할된 배열을 만듭니다.\n배열을 균등하게 분할할 수 없는 경우 남은 요소들로 마지막 배열을 반환합니다. Arguments\n- array (Array): 대상 배열\n- size=1 (number): 분할 길이 Returns\n- (Array): 분할된 배열 _.compact 잘못된 값이 모두 제거된 배열을 반환합니다.…","html":"<h2>_.chunk</h2>\n<p>매개변수 길이만큼 그룹으로 분할된 배열을 만듭니다.<br>\n배열을 균등하게 분할할 수 없는 경우 남은 요소들로 마지막 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [size=1] (number): 분할 길이</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 분할된 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">chunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [['a', 'b'], ['c', 'd']]</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">chunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [['a', 'b', 'c'], ['d']]</span></code></pre></div>\n<h2>_.compact</h2>\n<p>잘못된 값이 모두 제거된 배열을 반환합니다.<br>\n<code class=\"language-text\">false</code>, <code class=\"language-text\">null</code>, <code class=\"language-text\">0</code>, <code class=\"language-text\">\"\"</code>, <code class=\"language-text\">undefined</code> 그리고 <code class=\"language-text\">NaN</code>은 제거됩니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 필터링 된 값의 새 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">compact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1, 2, 3]</span></code></pre></div>\n<h2>_.concat</h2>\n<p>대상 배열에 배열 또는 값을 연결하여 새 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [values] (...*): 연결할 배열 또는 값</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 연결된 새 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> other <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1, 2, 3, [4]]</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1]</span></code></pre></div>\n<h2>_.difference</h2>\n<p>두 배열을 받아 동일성 비교를 하여 앞의 배열에서 뒤의 배열과 다른 요소들을 모아 새 배열을 반환합니다. 결과값의 순서 및 참조는 제1 배열에 의해 결정됩니다.</p>\n<p>참고 : <code class=\"language-text\">_.pullAll</code>과 달리 이 메서드는 새 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 검사할 배열<br>\n- [values] (...Array): 제외할 배열</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 필터링 된 값의 새 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">difference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1]</span></code></pre></div>\n<h2>_.differenceBy</h2>\n<p>difference에서 추가로 대상 배열의 순회 함수를 인자로 받는다.<br>\n대상 배열들은 함수에 의해 한번 순회를 거친후 비교된다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 검사할 배열<br>\n- [values] (...Array): 제외할 배열<br>\n- [comparator] (Function): 순회 함수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 필터링 된 값의 새 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">differenceBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => 1.2</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'김철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'박철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'이철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">differenceBy</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'김봉남'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'이철수'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">member</span> <span class=\"token operator\">=></span> member<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* => [\n  {id: 2, name: '박철수',},\n  {id: 3, name: '이철수',}\n] */</span></code></pre></div>\n<h2>_.differenceWith</h2>\n<p>difference에서 추가로 대상 배열의 비교 함수를 인자로 받는다.<br>\n비교 함수로 대상 배열들의 동일성 여부를 판별한다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 검사할 배열<br>\n- [values] (...Array): 제외할 배열<br>\n- [comparator] (Function): 비교 함수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 필터링 된 값의 새 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">differenceBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => 1.2</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'김철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'박철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'이철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">differenceWith</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'김봉남'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'이철수'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* => [\n  {id: 1, name: '김철수',},\n  {id: 2, name: '박철수',}\n] */</span></code></pre></div>","frontmatter":{"title":"Lodash Array Methods 1","date":"September 22, 2022","update":"September 22, 2022","tags":["Javascript","Lodash"],"series":"Lodash Array Methods"},"fields":{"slug":"/Lodash-Array-Methods-1/","readingTime":{"minutes":3.47}}},"seriesList":{"edges":[{"node":{"id":"c848be40-0a05-5f27-8b4c-c91003591577","fields":{"slug":"/Lodash-Array-Methods-1/"},"frontmatter":{"title":"Lodash Array Methods 1"}}},{"node":{"id":"b3971968-a2d2-5a55-bea4-b6f1bf522639","fields":{"slug":"/Lodash-Array-Methods-2/"},"frontmatter":{"title":"Lodash Array Methods 2"}}},{"node":{"id":"8808456b-568a-5b77-b231-8c686e0d5d9d","fields":{"slug":"/Lodash-Array-Methods-3/"},"frontmatter":{"title":"Lodash Array Methods 3"}}},{"node":{"id":"930faf90-b582-5245-9dbd-0b81bf86b296","fields":{"slug":"/Lodash-Array-Methods-4/"},"frontmatter":{"title":"Lodash Array Methods 4"}}}]},"previous":{"fields":{"slug":"/반응형이미지를-구현하는-두가지-방법/"},"frontmatter":{"title":"반응형이미지를 구현하는 두가지 방법"}},"next":{"fields":{"slug":"/Lodash-Array-Methods-2/"},"frontmatter":{"title":"Lodash Array Methods 2"}}},"pageContext":{"id":"c848be40-0a05-5f27-8b4c-c91003591577","series":"Lodash Array Methods","previousPostId":"2e7dae26-056c-5f77-8438-8c54ad8be00d","nextPostId":"b3971968-a2d2-5a55-bea4-b6f1bf522639"}},"staticQueryHashes":[]}