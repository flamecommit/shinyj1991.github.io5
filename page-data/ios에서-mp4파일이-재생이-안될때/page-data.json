{"componentChunkName":"component---src-templates-post-jsx","path":"/ios에서-mp4파일이-재생이-안될때/","result":{"data":{"site":{"siteMetadata":{"title":"SIMPLIZM"}},"markdownRemark":{"id":"efbb93f9-6dd7-5ea7-9674-cd559d22bdc4","excerpt":"회사에서 새로 런칭하는 게임의 티저 성격의 단일 페이지 웹을 제작하게 되었는데요 얼마전 정식 릴리즈된 Nuxt3를 사용하면서 겪었던 시행착오를 정리해 보았습니다. 기존에 사용하던 Nuxt2 과 사용방법이 여기저기 변화했지만 공식문서에 정리가 잘 되어있어 작업자체는 크게 어렵지 않았습니다. 기억나는 변경사항으로는  파일의 옵션에서 와 가 로 통합되었다는 것…","html":"<p>회사에서 새로 런칭하는 게임의 티저 성격의 단일 페이지 웹을 제작하게 되었는데요</p>\n<p>얼마전 정식 릴리즈된 Nuxt3를 사용하면서 겪었던 시행착오를 정리해 보았습니다.</p>\n<p>기존에 사용하던 Nuxt2 과 사용방법이 여기저기 변화했지만 공식문서에 정리가 잘 되어있어 작업자체는 크게 어렵지 않았습니다.</p>\n<p>기억나는 변경사항으로는 <code class=\"language-text\">nuxt.config.js</code> 파일의 옵션에서 <code class=\"language-text\">modules</code>와 <code class=\"language-text\">buildModules</code>가 <code class=\"language-text\">modules</code>로 통합되었다는 것과</p>\n<p><code class=\"language-text\">plugins</code> 디렉토리에 있는 <code class=\"language-text\">js</code> 또는 <code class=\"language-text\">ts</code> 파일을 <code class=\"language-text\">nuxt.config.js</code> 에서 호출하지 않아도 자동으로 실행해주는 것이었습니다.</p>\n<p>전체적으로 Nuxt2 보다 확실히 개발 편의성이 높아졌다고 생각합니다.</p>\n<p>여차저차 공식문서와 구글링을 통해 개발을 마무리 하고 배포 단계에 도달했습니다.</p>\n<p>Nuxt의 번들링은 <code class=\"language-text\">build</code> 와 <code class=\"language-text\">generate</code> 두 종류가 있는데요</p>\n<p><code class=\"language-text\">build</code>는 ssr 을 포함한 정규 빌드 방식이고 <code class=\"language-text\">generate</code> 는 정적 웹사이트라고 보시면 됩니다.</p>\n<p>제가 이번에 투입된 프로젝트는 별도의 http 통신이 없는 단순 정보제공 성격의 티저사이트 이기 때문에 <code class=\"language-text\">generate</code> 로 배포하기로 결정했습니다.</p>\n<p>하지만 generate로 만들어진 결과물 사이트를 서버에 배포해 보니 개발환경과 미세한 차이점들이 발생했습니다. (error 페이지 렌더링 등등)</p>\n<p>아마 모든 프레임워크가 그렇듯 Nuxt3도 처음 릴리즈(현재 버전 3.0.0)된 버전이기 때문에 이런 오류가 발생하는건 어쩔수 없다고 생각합니다. (이래서 프레임워크는 검증기간을 거친 후 실제서비스에 적용해야 합니다.)</p>\n<p>그래서 정적웹사이트에서 정규 빌드 후 서버에서 실행시키는 방향으로 배포방식을 변경하기로 마음먹었습니다.</p>\n<p>Nuxt3에서는 작업물을 <code class=\"language-text\">build</code> 한 다음에 <code class=\"language-text\">node .output/server/index.mjs</code> 명령어를 통해 실행시켜야 합니다.</p>\n<p>하지만 이렇게 실행하게 되면 추후 사이트를 수정할 일이 생겨 작업 후 재배포 했을때, 배포하는 동안 서비스가 내려가는 문제가 발생합니다.</p>\n<p>이를 방지하기 위해서 사용하는 모듈이 바로 <code class=\"language-text\">pm2</code>의 클러스터 모드입니다.</p>\n<p><code class=\"language-text\">pm2</code>를 사용하기 위해선 프로젝트 root 경로에 <code class=\"language-text\">ecosystem.config.js</code> 파일을 생성해 주어야 하고</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ecosystem.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">apps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'NightCrows'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">exec_mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cluster'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">instances</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'prod'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'max'</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">script</span><span class=\"token operator\">:</span> <span class=\"token string\">'./.output/server/index.mjs'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">env_alpha</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">HOST</span><span class=\"token operator\">:</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">PORT</span><span class=\"token operator\">:</span> <span class=\"token number\">6141</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">NODE_ENV</span><span class=\"token operator\">:</span> <span class=\"token string\">'alpha'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>서버에는 글로벌 옵션으로 pm2를 설치해 주어야 합니다.</p>\n<p><code class=\"language-text\">sudo npm install -g pm2</code></p>\n<p>이후의 작업은 다음에 다시 정리하도록 하겠습니다.</p>","frontmatter":{"title":"Nuxt3 Service 배포 삽질 기록","date":"December 22, 2022","update":"December 22, 2022","tags":["nuxt","nuxt3","deploy"],"series":null},"fields":{"slug":"/ios에서-mp4파일이-재생이-안될때/","readingTime":{"minutes":3.81}}},"seriesList":{"edges":[{"node":{"id":"b6578fe8-f337-5d11-8514-da61bd46e110","fields":{"slug":"/Nuxt-Datepicker-적용하기/"},"frontmatter":{"title":"[Nuxt.js] Datepicker UI 적용하기"}}},{"node":{"id":"01141e74-a4d1-5bf5-88a0-56be4fc92a28","fields":{"slug":"/Nuxt3-Service-배포-삽질-기록/"},"frontmatter":{"title":"[Nuxt.js] Datepicker UI 적용하기"}}},{"node":{"id":"df158759-b65d-5ec8-9d3b-dcbd394961a7","fields":{"slug":"/Javascript-어림수-구하기/"},"frontmatter":{"title":"Javascript 어림수 구하기"}}},{"node":{"id":"3383351a-adc2-5c17-9896-3e5a8851d927","fields":{"slug":"/Javascript-nullish-병합-연산자/"},"frontmatter":{"title":"Javascript nullish 병합 연산자"}}},{"node":{"id":"7d5747a4-ce74-5abe-9d37-984d8d8a4976","fields":{"slug":"/Javascript-옵셔널-체이닝/"},"frontmatter":{"title":"Javascript 옵셔널 체이닝"}}},{"node":{"id":"5f9d9d87-122d-55bf-a698-38f13c4e038d","fields":{"slug":"/React에-CSS-적용하기/"},"frontmatter":{"title":"React에 CSS 적용하기"}}},{"node":{"id":"0b36fb82-188a-520d-a43b-7c0e3a0c7eee","fields":{"slug":"/반응형이미지를-구현하는-두가지-방법/"},"frontmatter":{"title":"반응형이미지를 구현하는 두가지 방법"}}},{"node":{"id":"b6b8bdda-84c2-5304-8007-f8001110ec52","fields":{"slug":"/웹사이트-웹접근성-진단하기/"},"frontmatter":{"title":"웹사이트 웹접근성 진단하기"}}},{"node":{"id":"113a8650-e749-5d9a-bd9d-1cbbf2dc3951","fields":{"slug":"/Next-CSS-Transform/"},"frontmatter":{"title":"Next CSS Transform"}}},{"node":{"id":"22d66f73-accd-503d-9d27-be8addeb6eff","fields":{"slug":"/vue3-프로젝트에-vue-i18n-적용하기/"},"frontmatter":{"title":"vue3 프로젝트에 vue-i18n 적용하기"}}},{"node":{"id":"8a7d7935-f24b-5a98-9b68-3873e51668b5","fields":{"slug":"/vue3-본인확인서비스-붙이기/"},"frontmatter":{"title":"vue3 본인확인서비스 붙이기"}}},{"node":{"id":"efbb93f9-6dd7-5ea7-9674-cd559d22bdc4","fields":{"slug":"/ios에서-mp4파일이-재생이-안될때/"},"frontmatter":{"title":"Nuxt3 Service 배포 삽질 기록"}}}]},"previous":{"fields":{"slug":"/vue3-본인확인서비스-붙이기/"},"frontmatter":{"title":"vue3 본인확인서비스 붙이기"}},"next":null},"pageContext":{"id":"efbb93f9-6dd7-5ea7-9674-cd559d22bdc4","series":null,"previousPostId":"8a7d7935-f24b-5a98-9b68-3873e51668b5","nextPostId":null}},"staticQueryHashes":[]}