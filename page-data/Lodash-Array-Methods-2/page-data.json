{"componentChunkName":"component---src-templates-post-jsx","path":"/Lodash-Array-Methods-2/","result":{"data":{"site":{"siteMetadata":{"title":"블로그 - SIMPLIZM"}},"markdownRemark":{"id":"8940aabc-6303-5440-ba51-b23dab739260","excerpt":"_.drop 앞에서 부터 n개의 요소를 제거한 새 배열을 반환합니다. Arguments\n- array (Array): 대상 배열\n- n=1 (number): 삭제할 요소 수 Returns\n- (Array): 결과 배열 _.dropRight 끝에서 부터 n개의 요소를 제거한 새 배열을 반환합니다. Arguments\n- array (Array): 대상 배열\n…","html":"<h2>_.drop</h2>\n<p>앞에서 부터 n개의 요소를 제거한 새 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [n=1] (number): 삭제할 요소 수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 결과 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [2, 3]</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [3]</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => []</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1, 2, 3]</span></code></pre></div>\n<h2>_.dropRight</h2>\n<p>끝에서 부터 n개의 요소를 제거한 새 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [n=1] (number): 삭제할 요소 수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 결과 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1, 2]</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1]</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => []</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [1, 2, 3]</span></code></pre></div>\n<h2>_.dropRightWhile</h2>\n<p>끝에서 부터 술어가 false를 반환할 때까지 순환하면서 요소들을 삭제한 후 결과 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [predicate=identity] (Funtion): 반복마다 호출되는 함수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 결과 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'barney'</span><span class=\"token punctuation\">,</span>  <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'fred'</span><span class=\"token punctuation\">,</span>    <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'pebbles'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRightWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>o<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['barney']</span>\n \n<span class=\"token comment\">// The `_.matches` iteratee shorthand.</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRightWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'pebbles'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['barney', 'fred']</span>\n \n<span class=\"token comment\">// The `_.matchesProperty` iteratee shorthand.</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRightWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['barney']</span>\n \n<span class=\"token comment\">// The `_.property` iteratee shorthand.</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropRightWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['barney', 'fred', 'pebbles']</span></code></pre></div>\n<h2>_.dropWhile</h2>\n<p>앞에서 부터 술어가 false를 반환할 때까지 순환하면서 요소들을 삭제한 후 결과 배열을 반환합니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- [predicate=identity] (Funtion): 반복마다 호출되는 함수</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 결과 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'barney'</span><span class=\"token punctuation\">,</span>  <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'fred'</span><span class=\"token punctuation\">,</span>    <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'pebbles'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>o<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['pebbles']</span>\n \n<span class=\"token comment\">// The `_.matches` iteratee shorthand.</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'barney'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'active'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['fred', 'pebbles']</span>\n \n<span class=\"token comment\">// The `_.matchesProperty` iteratee shorthand.</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['pebbles']</span>\n \n<span class=\"token comment\">// The `_.property` iteratee shorthand.</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">dropWhile</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => objects for ['barney', 'fred', 'pebbles']</span></code></pre></div>\n<h2>_.fill</h2>\n<p>배열 요소를 시작부터 끝까지 값을 채웁니다.</p>\n<p><strong><em>Arguments</em></strong><br>\n- array (Array): 대상 배열<br>\n- value (*): 배열을 채울 요소<br>\n- [start=0] (number): 시작 위치<br>\n- [end=array.length] (number): 종료 위치</p>\n<p><strong><em>Returns</em></strong><br>\n- (Array): 결과 배열</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => ['a', 'a', 'a']</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [2, 2, 2]</span>\n \n_<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => [4, '*', '*', 10]</span></code></pre></div>","frontmatter":{"title":"Lodash Array Methods 2","date":"September 23, 2022","update":"September 23, 2022","tags":["Javascript","Lodash"],"series":"Lodash Array Methods"},"fields":{"slug":"/Lodash-Array-Methods-2/","readingTime":{"minutes":2.82}}},"seriesList":{"edges":[{"node":{"id":"aab16302-dd41-53e5-8f9c-2a2e9c4b8da1","fields":{"slug":"/Lodash-Array-Methods-1/"},"frontmatter":{"title":"Lodash Array Methods 1"}}},{"node":{"id":"8940aabc-6303-5440-ba51-b23dab739260","fields":{"slug":"/Lodash-Array-Methods-2/"},"frontmatter":{"title":"Lodash Array Methods 2"}}},{"node":{"id":"aac6c985-d401-5e25-8795-d9c6aa9b3d1b","fields":{"slug":"/Lodash-Array-Methods-3/"},"frontmatter":{"title":"Lodash Array Methods 3"}}},{"node":{"id":"29ac4d1a-af39-5393-957c-9601dba1627e","fields":{"slug":"/Lodash-Array-Methods-4/"},"frontmatter":{"title":"Lodash Array Methods 4"}}},{"node":{"id":"a4734415-d844-51f3-9e3d-ad1a910f572c","fields":{"slug":"/Lodash-Array-Methods-5/"},"frontmatter":{"title":"Lodash Array Methods 5"}}}]},"previous":{"fields":{"slug":"/Lodash-Array-Methods-1/"},"frontmatter":{"title":"Lodash Array Methods 1"}},"next":{"fields":{"slug":"/웹사이트-웹접근성-진단하기/"},"frontmatter":{"title":"웹사이트 웹접근성 진단하기"}}},"pageContext":{"id":"8940aabc-6303-5440-ba51-b23dab739260","series":"Lodash Array Methods","previousPostId":"aab16302-dd41-53e5-8f9c-2a2e9c4b8da1","nextPostId":"b6b8bdda-84c2-5304-8007-f8001110ec52"}},"staticQueryHashes":[]}