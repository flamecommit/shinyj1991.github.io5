{"componentChunkName":"component---src-templates-post-jsx","path":"/React에-CSS-적용하기/","result":{"data":{"site":{"siteMetadata":{"title":"SIMPLIZM"}},"markdownRemark":{"id":"5f9d9d87-122d-55bf-a698-38f13c4e038d","excerpt":"React에 CSS를 적용하는 방법은 여러가지가 있습니다. 1. inline styling html태그  속성에 직접 json형태의 CSS를 할당하는 방법입니다. 같은 방법으로 CSS를 javascript 변수에 담아 사용할 수도 있습니다. 2. CSS file import 별도의 css 파일을 만들어 import 하는 방법입니다. 이 방법은 CSS적용 …","html":"<p>React에 CSS를 적용하는 방법은 여러가지가 있습니다.</p>\n<h2>1. inline styling</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Text</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>html태그 <code class=\"language-text\">style</code> 속성에 직접 json형태의 CSS를 할당하는 방법입니다.</p>\n<p>같은 방법으로 CSS를 javascript 변수에 담아 사용할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> styleObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styleObj<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Text</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>2. CSS file import</h2>\n<p>별도의 css 파일을 만들어 import 하는 방법입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Example.css */</span>\n\n<span class=\"token selector\">.txt</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Example.jsx</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./Example.css'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Text</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 방법은 CSS적용 범위가 전역이라는 점을 주의해야합니다.</p>\n<p>만약 작성한 CSS를 해당 컴포넌트에만 적용하고 싶다면<br>\nCSS 파일명과 확장자 사이에 <code class=\"language-text\">.module</code>을 추가해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Example.module.css */</span>\n\n<span class=\"token selector\">.txt</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Example.jsx</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./Example.module.css'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Text</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>3. styled-components</h2>\n<p>styled-components 패키지를 설치하면 컴포넌트 내부에 CSS를 작성할 수 있습니다.<br>\n개인적으로 가장 추천하는 방식입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm install styled-components\nor\nyarn add styled-components</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span>\n\n<span class=\"token comment\">// styled</span>\n<span class=\"token keyword\">const</span> StyledWrapper <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  color: red;\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StyledWrapper</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Text</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StyledWrapper</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"React에 CSS 적용하기","date":"September 20, 2022","update":"September 20, 2022","tags":["React","CSS"],"series":null},"fields":{"slug":"/React에-CSS-적용하기/","readingTime":{"minutes":1.715}}},"seriesList":{"edges":[{"node":{"id":"b6578fe8-f337-5d11-8514-da61bd46e110","fields":{"slug":"/Nuxt-Datepicker-적용하기/"},"frontmatter":{"title":"[Nuxt.js] Datepicker UI 적용하기"}}},{"node":{"id":"01141e74-a4d1-5bf5-88a0-56be4fc92a28","fields":{"slug":"/Nuxt3-Service-배포-삽질-기록/"},"frontmatter":{"title":"[Nuxt.js] Datepicker UI 적용하기"}}},{"node":{"id":"df158759-b65d-5ec8-9d3b-dcbd394961a7","fields":{"slug":"/Javascript-어림수-구하기/"},"frontmatter":{"title":"Javascript 어림수 구하기"}}},{"node":{"id":"3383351a-adc2-5c17-9896-3e5a8851d927","fields":{"slug":"/Javascript-nullish-병합-연산자/"},"frontmatter":{"title":"Javascript nullish 병합 연산자"}}},{"node":{"id":"7d5747a4-ce74-5abe-9d37-984d8d8a4976","fields":{"slug":"/Javascript-옵셔널-체이닝/"},"frontmatter":{"title":"Javascript 옵셔널 체이닝"}}},{"node":{"id":"5f9d9d87-122d-55bf-a698-38f13c4e038d","fields":{"slug":"/React에-CSS-적용하기/"},"frontmatter":{"title":"React에 CSS 적용하기"}}},{"node":{"id":"0b36fb82-188a-520d-a43b-7c0e3a0c7eee","fields":{"slug":"/반응형이미지를-구현하는-두가지-방법/"},"frontmatter":{"title":"반응형이미지를 구현하는 두가지 방법"}}},{"node":{"id":"b6b8bdda-84c2-5304-8007-f8001110ec52","fields":{"slug":"/웹사이트-웹접근성-진단하기/"},"frontmatter":{"title":"웹사이트 웹접근성 진단하기"}}},{"node":{"id":"113a8650-e749-5d9a-bd9d-1cbbf2dc3951","fields":{"slug":"/Next-CSS-Transform/"},"frontmatter":{"title":"Next CSS Transform"}}},{"node":{"id":"22d66f73-accd-503d-9d27-be8addeb6eff","fields":{"slug":"/vue3-프로젝트에-vue-i18n-적용하기/"},"frontmatter":{"title":"vue3 프로젝트에 vue-i18n 적용하기"}}},{"node":{"id":"8a7d7935-f24b-5a98-9b68-3873e51668b5","fields":{"slug":"/vue3-본인확인서비스-붙이기/"},"frontmatter":{"title":"vue3 본인확인서비스 붙이기"}}},{"node":{"id":"efbb93f9-6dd7-5ea7-9674-cd559d22bdc4","fields":{"slug":"/ios에서-mp4파일이-재생이-안될때/"},"frontmatter":{"title":"Nuxt3 Service 배포 삽질 기록 (feat. pm2)"}}}]},"previous":{"fields":{"slug":"/Javascript-옵셔널-체이닝/"},"frontmatter":{"title":"Javascript 옵셔널 체이닝"}},"next":{"fields":{"slug":"/반응형이미지를-구현하는-두가지-방법/"},"frontmatter":{"title":"반응형이미지를 구현하는 두가지 방법"}}},"pageContext":{"id":"5f9d9d87-122d-55bf-a698-38f13c4e038d","series":null,"previousPostId":"7d5747a4-ce74-5abe-9d37-984d8d8a4976","nextPostId":"0b36fb82-188a-520d-a43b-7c0e3a0c7eee"}},"staticQueryHashes":[]}